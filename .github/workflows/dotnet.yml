name: .NET

on:
  push:
    branches:
      - publish
    tags:
      - v*

  pull_request:
    branches:
      - publish

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: env
      run: ./actions env $GITHUB_ENV '${{ github.ref }}' '${{ github.sha }}'

    - name: restore
      run: ./actions restore

    - name: build
      run: ./actions build --configuration Release --no-restore ${{ env.EXTRA_ARGS }}

    - name: test
      run: ./actions test --configuration Release --no-build --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura -- xunit.parallelizeAssembly=true xunit.parallelizeTestCollections=true

    - name: generate code coverage report
      run: ./actions code_coverage

    - name: upload code coverage report
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Cobertura
        path: artifacts/code-coverage

    - name: samples
      run: ./actions sample --configuration Release --no-build --no-restore ${{ env.EXTRA_ARGS }}

    - name: benchmark
      run: sudo ./actions benchmark

    - name: upload benchmark
      uses: actions/upload-artifact@v1.0.0
      with:
        name: BenchmarkDotNet
        path: BenchmarkDotNet.Artifacts/results

    - name: pack
      run: ./actions pack --configuration Release --no-restore --no-build ${{ env.EXTRA_ARGS }}
      if: ${{ contains(github.ref, 'refs/heads/publish') || startsWith(github.ref, 'refs/tags/v') }}

    - name: upload package
      uses: actions/upload-artifact@v1.0.0
      if: ${{ contains(github.ref, 'refs/heads/publish') || startsWith(github.ref, 'refs/tags/v') }}
      with:
        name: Jsonificate
        path: src/Jsonificate/bin/Release

    - name: nuget
      run: ./actions nuget 'https://api.nuget.org/v3/index.json' $NUGET_API_KEY
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
